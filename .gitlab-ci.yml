image: node:10

# include:
#     - template: Code-Quality.gitlab-ci.yml

# code_quality:
#     artifacts:
#         paths: [gl-code-quality-report.json]

# You specify the stages. Those are the steps that GitLab will go through
# Order matters.
stages:
    - install
    - build
    - quality
    - test
    - deploy

install:
    stage: install
    script:
        - npm install
    artifacts:
        name: "artifacts"
        untracked: true
        expire_in: 60 mins
        paths:
            - .npm/
            - node_modules/

build:
    stage: build
    script:
        - CI=false npm run build
    artifacts:
        paths:
            - build
        expire_in: 60 mins
    dependencies:
        - install

# linting:
#     stage: quality
#     script:
#         - npm run lint
#     dependencies:
#         - install

# test:
#     stage: test
#     script:
#         - npm run test:coverage
#     dependencies:
#         - install
#     coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
#     artifacts:
#         when: always
#         paths:
#             - coverage/lcov-report/index.html
#         expire_in: 10 days

deploy:
  image: python:latest
  stage: deploy
  dependencies:
    - build
  before_script:
    - apt-get update -qy
    - apt-get install -y rsync
    - pip install ansible
  script:
    - current_dir=$(pwd)
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/tunga.io/tunga-platform-provision.git
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - cd tunga-platform-provision
    - ANSIBLE_STDOUT_CALLBACK=debug ansible-playbook deploy-works-release.yml -i inventory/hosts.ini --extra-vars="runner_root_dir=$current_dir" --verbose